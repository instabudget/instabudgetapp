# rails generate controller
  PasswordResets
    new             => this is for link to reset your password once clicked
    edit            => this is for page that takes password and password confirmation
    --no-test-framework

    flow:
     user clicks on forgot my password => new
      new{
        displays box which customer will inout email address
        if email address matches user.email
        email is send with a link
        }
      user clicks on emailed link => edit
      edit{
        display 2 boxed for password reset and password confirmation
        }
      Alert success!

# change the routes add
    resources :password_resets,     only: [:new, :create, :edit, :update]

# add forgot password link to login page
  <%= link_to "(Forgot password)", new_password_reset_path %>
    resources in routes
      first we put the final page
        new_
      then the controller
        password_resets_
      then path
        _path

# setup the user data model
    current users model
      t.string   "name"
      t.string   "email"
      t.datetime "created_at",
      t.datetime "updated_at",
      t.string   "password_digest"
      t.string   "remember_digest"
      t.string   "activation_digest"
      t.boolean  "activated",
      t.datetime "activated_at"

    add
      reset_digest  "string"
      reset_sent_at "datetime"
        *** password reset to expire after 2 hours for security ***
        *** for that we will use reset_sent_at ***

  # generate the migration
    $ rails generate migration add_reset_to_users reset_digest:string reset_sent_at:datetime

    migration result will be:
    def change
      add_column :users, :reset_digest, :string
      add_column :users, :reset_sent_at, :datetime
    end

    the defaults are fine no need to change anything

  # run the migration
    $ bundle exec rake db:migrate

# create the form (new)
  copy the form from login/new but instead session route, route to :password_reset, url: password_resets_path

# reset link
  should be similar to account activation controller
    def create
      @user = User.find_by(email: params[:password_reset][:email].downcase)
      if @user
        @user.create_reset_digest
        @user.send_password_reset_email
        flash[:info] = "Email sent with password reset instructions"
        redirect_to root_url
      elsif
        flash.now[:danger] = "Email address not found"
        render 'new'
      end
    end


  # def create_reset_digest
      self.reset_token = User.new_token
      update_attribute(:reset_digest, User.digest(reset_token))
      update_attribute(:reset_sent_at, Time.zone.now)
    end

  # since reset_token was just new now we need to add it to attr_accessor

  # .send_password_reset_email in PasswordResetsController should also be defined
      def send_password_reset_email
        UserMailer.password_reset(self).deliver_now
      end

  # .password_reset not defined need to define it in user_mailer.rb
    def password_reset(user)
      @user = user
      mail to: user.email, subject: "Password reset"
    end

  # now define the email templates

  # edit template
    need a form to reset the password
